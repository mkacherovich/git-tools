#!/bin/bash

# Credit goes to:
# http://thediscoblog.com/blog/2014/03/29/custom-git-commands-in-3-steps/
# http://stackoverflow.com/questions/1307114/how-can-i-archive-git-branches
# https://git-scm.com/book/en/v2/Git-Basics-Tagging


((!$#)) && echo No branch name, command ignored! && exit 1

ORIGIN=$(git remote)

# Track the remote branch using a local branch with a name that is unlikely to cause collisions
git branch --track -f xx-git-archive-branch-$1 $ORIGIN/$1 &&

# Tag the new branch under the archive/ structure
git tag -f -m "Archived $1 branch using git-archive-branch utility" -a archive/$1 xx-git-archive-branch-$1 &&

# Delete the tracked branch locally
git branch -D xx-git-archive-branch-$1 &&

# Push the new tag to origin
git push -f $ORIGIN refs/tags/archive/$1 &&

# Push branch deletion to origin
git push $ORIGIN :$1 &&

echo "
Archived branch $ORIGIN/$1 to tag archive/$1
To restore this branch do the following:
   git branch $1 archive/$1
   git push $ORIGIN $1
"

